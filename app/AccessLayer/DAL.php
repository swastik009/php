<?php
/**
 * User: Swastik
 * Date: 2/1/2019
 * Time: 12:40 PM
 */



namespace AccessLayer;

require 'namespace.php';
use AccessLayer\lib\support;



class DAL
{


        public $id;
        public $data;
        public $tableName;
        public $conn;
        public $button;
        public $fileHolder;
        public $files;
        public $imgPath;
        public $support;


    public  function __construct()
    {
        $this->id = '';
        $this->data = [];
        $this->tableName = '';
        $connection = new Conn();
        $this->conn = $connection->connect();
        $this->button = '';
        $this->fileHolder = '';
        $this->files = [];
        $this->imgPath = '';
        $this->support = new support();
    }


    /**
     * @param string $value
     */
    function dd($value = '')
    {
        die($value);

    }



   public function Save()
    {

        $name='';
        if(!empty($this->files)){
            $name = $this->support->imgNameChange();
            $this->data += [$this->fileHolder => $name];
        }

        /**
         * clears the button's key-value pair from an array $data
         * because we don't need button's information in INSERT Query.
         */
        unset($this->data[$this->button]);
        unset($this->data[$this->id]);

        /**
         * CleanseCol returns the actual column name/s as a single string
         * from an array $data
         * example :
         * $data = {['title'] => ['Hello world'], ['description'] => ['Newbie Here']};
         * then the returned results are
         * $foo = title,description;
         * so that it can be added as a corresponding column name/s in INSERT query
         */
        $ColName = $this->support->CleanseCol($this->data);
        /**
         * CleanseValue returns the actual column value/s as a single string
         * from an array $data
         * example :
         * $data = {['title'] => ['Hello world'], ['description'] => ['Newbie Here']};
         * then the returned results are
         * $foo = 'Hello world','Newbie Here';
         * so that it can be added as  a corresponding column value/s in INSERT query
         * and also note single quote and comma separator that has been automatically
         * generated by this method
         */
        $ColValue = $this->support->CleanseValue($this->data);

        /**
         * $query holds actual INSERT query
         * example:
         * $data = {['title'] => ['Hello world'], ['description'] => ['Newbie Here']};
         * then
         * CleanseCol returns
         * $foo = title,description;
         * CleanseValue returns
         * $bar = 'Hello World', 'Newbie Here'
         * so $query = "INSERT INTO table_name (title,description) VALUES ('Hello World', 'NewBie Here');
         */
        $query = "INSERT INTO " . $this->tableName . " (" . $ColName . ") VALUES (" . $ColValue . ");";


        if(mysqli_query($this->conn,$query)) {

            if (!empty($name)) {
                $this->support->makeDir();
                move_uploaded_file($this->files[$this->fileHolder]['tmp_name'], $this->imgPath . $name);
            }
            return true;
        }
        else {

            echo mysqli_error($this->conn);
        }


    }


    public function fetchAll()
    {
        $query = "SELECT * FROM " . $this->tableName;
        $result = mysqli_query($this->conn, $query);
        return $result;

    }


    /**
     * @return bool|string
     */
    public function update()
    {

        unset($this->data[$this->button]);
        $id = $this->data['id'];
        unset($this->data['id']);

        $name = '';


        if(!$this->files[$this->fileHolder]['error'] > 0){
            $name = $this->support->imgNameChange($this->files[$this->fileHolder]['name']);
            $imageName = mysqli_fetch_assoc($this->fetchSingle());
            $this->data += [$this->fileHolder => $name];
            $this->support->DeleteImg($imageName['image']);
        }

        $ColName = array_keys($this->data);
        $ColValues = array_values($this->data);
        $Query = $this->support->CleansedQueryForUpdate($ColName, $ColValues, $id);

        if(mysqli_query($this->conn, $Query)) {
            if (!empty($name)) {
                $this->support->makeDir();
                move_uploaded_file($this->files[$this->fileHolder]['tmp_name'], $this->imgPath . $name);
            }
            return true;
        }
        else {
            echo mysqli_error($this->conn);
        }
    }





    /**
     * @return string
     */
    public function fetchSingle()
    {

        $query = "SELECT * FROM " . $this->tableName . " WHERE id = " . $this->id;
        return $result = mysqli_query($this->conn, $query);
    }




}





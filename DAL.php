<?php
/**
 * Created by PhpStorm.
 * User: Swastik
 * Date: 2/1/2019
 * Time: 12:40 PM
 */

require 'conn.php';

class DAL
{




    /**
     * @param string $value
     */
    function dd($value = '')
    {
        die($value);

    }


    /**
     * @param $data
     * @param $tableName
     * @param $conn
     * @param $button
     * @return bool|string
     */
   public function Save($data, $tableName, $conn, $button)
    {

        /**
         * clears the button's key-value pair from an array $data
         * because we don't need button's information in INSERT Query.
         */
        unset($data[$button]);

        /**
         * CleanseCol returns the actual column name/s as a single string
         * from an array $data
         * example :
         * $data = {['title'] => ['Hello world'], ['description'] => ['Newbie Here']};
         * then the returned results are
         * $foo = title,description;
         * so that it can be added as a corresponding column name/s in INSERT query
         */
        $ColName = CleanseCol($data);
        /**
         * CleanseValue returns the actual column value/s as a single string
         * from an array $data
         * example :
         * $data = {['title'] => ['Hello world'], ['description'] => ['Newbie Here']};
         * then the returned results are
         * $foo = 'Hello world','Newbie Here';
         * so that it can be added as  a corresponding column value/s in INSERT query
         * and also note single quote and comma separator that has been automatically
         * generated by this method
         */
        $ColValue = CleanseValue($data);

        /**
         * $query holds actual INSERT query
         * example:
         * $data = {['title'] => ['Hello world'], ['description'] => ['Newbie Here']};
         * then
         * CleanseCol returns
         * $foo = title,description;
         * CleanseValue returns
         * $bar = 'Hello World', 'Newbie Here'
         * so $query = "INSERT INTO table_name (title,description) VALUES ('Hello World', 'NewBie Here');
         */
        $query = "INSERT INTO " . $tableName . " (" . $ColName . ") VALUES (" . $ColValue . ");";
        return (mysqli_query($conn, $query)) ? true : mysqli_error($conn);


    }


    /**
     * @param $tableName
     * @param $conn
     * @return bool|mysqli_result
     */
    public function fetchAll($tableName, $conn)
    {
        $query = "SELECT * FROM " . $tableName;
        $result = mysqli_query($conn, $query);
        return $result;

    }


    /**
     * @param $data
     * @param $TableName
     * @param $conn
     * @param $button
     * @return bool|string
     */
    public function update($data, $TableName, $conn, $button)
    {
        unset($data[$button]);
        $id = $data['id'];
        unset($data['id']);
        $ColName = array_keys($data);
        $ColValues = array_values($data);
        $Query = CleansedQueryForUpdate($ColName, $ColValues, $TableName, $id);
        return (mysqli_query($conn, $Query)) ? true : mysqli_error($conn);

    }


    /**
     * @param $ColName
     * @param $ColValues
     * @param $TableName
     * @param $id
     * @return string
     */
    public function CleansedQueryForUpdate($ColName, $ColValues, $TableName, $id)
    {

        $_Query = '';
        $Query = "UPDATE " . $TableName . " SET ";
        for ($i = 0; $i < sizeof($ColName); $i++) {

            $_Query .= $ColName[$i] . " = '" . $ColValues[$i] . "', ";

        }

        $Cleansed_Query = substr($_Query, 0, strlen($_Query) - 2);
        $Query = $Query . $Cleansed_Query . " WHERE id = " . $id;
        return $Query;
    }


    /**
     * @param $tableName
     * @param $id
     * @param $conn
     * @return string
     */
    public function fetchSingle($tableName, $id, $conn)
    {

        $query = "SELECT * FROM " . $tableName . " WHERE id = " . $id;
        return $result = mysqli_query($conn, $query);
    }


    /**
     * @param $data
     * @return string
     */
   public function CleanseCol($data)
    {
        $RawData = array_keys($data);
        $ActualData = implode(',', $RawData);
        return $ActualData;
    }

    /**
     * @param $data
     * @return bool|string
     */
   public function CleanseValue($data)
    {

        $RawData = '';
        foreach ($data as $key => $value) {

            $RawData .= "'" . $value . "',";
        }

        $ActualData = substr($RawData, 0, strlen($RawData) - 1);
        return $ActualData;

    }


    /**
     * @param $tableName
     * @param $id
     * @param $conn
     * @return bool|string
     */
    public function deleteRow($tableName, $id, $conn){
       $query = "DELETE FROM " .$tableName. "WHERE id = ".$id;
       return (mysqli_query($query,$conn)) ? true : mysqli_error($conn);

   }

}




